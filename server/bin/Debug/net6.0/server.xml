<?xml version="1.0"?>
<doc>
    <assembly>
        <name>server</name>
    </assembly>
    <members>
        <member name="M:server.Controllers.AllergenController.GetAllergens">
            <summary>
            Gets all allergens
            </summary>
        </member>
        <member name="M:server.Controllers.AllergenController.GetAllergenById(System.Int32)">
            <summary>
            Gets allergen by id
            </summary>
        </member>
        <member name="M:server.Controllers.AllergenController.GetAllergenTypes">
            <summary>
            Gets all allergen types
            </summary>
        </member>
        <member name="M:server.Controllers.AllergenController.GetAllergenTypeById(System.Int32)">
            <summary>
            Gets allergen type by id
            </summary>
        </member>
        <member name="M:server.Controllers.EntryController.GetAllCurrentUser">
            <summary>
            Gets all own entries
            </summary>
        </member>
        <member name="M:server.Controllers.EntryController.GetById(System.Int32)">
            <summary>
            Gets own entry by id
            </summary>
        </member>
        <member name="M:server.Controllers.EntryController.GetByDate(System.String)">
            <summary>
            Gets own entry by date
            </summary>
        </member>
        <member name="M:server.Controllers.EntryController.CreateEmpty(server.Models.CreateEntryDto)">
            <summary>
            Creates empty entry
            </summary>
        </member>
        <member name="M:server.Controllers.EntryController.Delete(System.String)">
            <summary>
            Deletes entry and existing assignments
            </summary>
        </member>
        <member name="M:server.Controllers.EntryController.AssignProduct(System.String,System.Int32)">
            <summary>
            Assigns product to own entry with provided date
            </summary>
        </member>
        <member name="M:server.Controllers.EntryController.UnassignProduct(System.String,System.Int32)">
            <summary>
            Unassigns product from own entry with provided date
            </summary>
            <remarks>Only own products</remarks>
            <response code="204">Unassigned succesfully</response>
            <response code="401">Unauthorized</response>
            <response code="400">Product has missing/invalid values</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:server.Controllers.EntryController.AssignSymptom(System.String,System.Int32)">
            <summary>
            Assigns product to own entry with provided date
            </summary>
        </member>
        <member name="M:server.Controllers.EntryController.UnassignSymptom(System.String,System.Int32)">
            <summary>
            Unassigns product from own entry with provided date
            </summary>
            <remarks>Only own products</remarks>
            <response code="204">Unassigned succesfully</response>
            <response code="401">Unauthorized</response>
            <response code="400">Product has missing/invalid values</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:server.Controllers.PollinationController.GetToday">
            <summary>
            Not implemented yet
            </summary>
        </member>
        <member name="M:server.Controllers.ProductController.GetAll">
            <summary>
            Gets all global and own products
            </summary>
        </member>
        <member name="M:server.Controllers.ProductController.GetAllCurrentUser">
            <summary>
            Gets all own products
            </summary>
        </member>
        <member name="M:server.Controllers.ProductController.GetById(System.Int32)">
            <summary>
            Gets global or own product by id
            </summary>
        </member>
        <member name="M:server.Controllers.ProductController.Create(server.Models.CreateProductDto)">
            <summary>
            Creates product
            </summary>
        </member>
        <member name="M:server.Controllers.ProductController.Update(System.Int32,server.Models.UpdateProductDto)">
            <summary>
            Updates product
            </summary>
            <remarks>Only name so far</remarks>
        </member>
        <member name="M:server.Controllers.ProductController.Delete(System.Int32)">
            <summary>
            Deletes product and existing allergen assignments
            </summary>
        </member>
        <member name="M:server.Controllers.ProductController.AssignAllergen(System.Int32,System.Int32)">
            <summary>
            Assigns allergen to own product
            </summary>
        </member>
        <member name="M:server.Controllers.ProductController.UnassignAllergen(System.Int32,System.Int32)">
            <summary>
            Unassigns allergen from own product
            </summary>
            <remarks>Only own products</remarks>
            <response code="204">Unassigned succesfully</response>
            <response code="401">Unauthorized</response>
            <response code="400">Product has missing/invalid values</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:server.Controllers.ProductController.GetFiltered">
            <summary>
            For testing purposes, do not use
            </summary>
        </member>
        <member name="M:server.Controllers.RegionController.GetAll">
            <summary>
            Gets all regions
            </summary>
        </member>
        <member name="M:server.Controllers.RegionController.GetById(System.Int32)">
            <summary>
            Gets region by id
            </summary>
        </member>
        <member name="M:server.Controllers.SymptomController.GetAll">
            <summary>
            Gets all symptoms
            </summary>
        </member>
        <member name="M:server.Controllers.SymptomController.GetById(System.Int32)">
            <summary>
            Gets symptom by id
            </summary>
        </member>
        <member name="M:server.Controllers.UserController.Register(server.Models.RegisterUserDto)">
            <summary>
            Creates new user account
            </summary>
        </member>
        <member name="M:server.Controllers.UserController.Authenticate(server.Models.LoginDto)">
            <summary>
            Returns succesfully authenticated user token
            </summary>
        </member>
        <member name="M:server.Controllers.UserController.GetUser(System.Int32)">
            <summary>
            Gets authorized user data
            </summary>
        </member>
        <member name="M:server.Controllers.UserController.UpdateRegion(System.Int32,server.Models.UpdateUserRegionDto)">
            <summary>
            Updates authorized user region
            </summary>
        </member>
        <member name="M:server.Controllers.UserController.UpdateName(System.Int32,server.Models.UpdateUserNameDto)">
            <summary>
            Updates authorized user name
            </summary>
        </member>
        <member name="M:server.Controllers.UserController.UpdateSex(System.Int32,server.Models.UpdateUserSexDto)">
            <summary>
            Updates authorized user sex
            </summary>
        </member>
        <member name="M:server.Controllers.UserController.Update(System.Int32,server.Models.UpdateUserDto)">
            <summary>
            Updates authorized user region, name and sex
            </summary>
        </member>
        <member name="M:server.Controllers.UserController.Update(System.Int32,server.Models.UpdateUserPasswordDto)">
            <summary>
            Updates authorized user password
            </summary>
        </member>
        <member name="M:server.Controllers.UserController.AssignAllergen(System.Int32)">
            <summary>
            Assigns allergen to own account
            </summary>
        </member>
        <member name="M:server.Controllers.UserController.UnssignAllergen(System.Int32)">
            <summary>
            Unassigns allergen from own account
            </summary>
        </member>
    </members>
</doc>
